# Кардиоида – кривая, напоминающая сердце. Ее уравнение в декартовых координатах выглядит так:
# x
# =
# 2
# r
# s
# i
# n
# (
# t
# )
# +
# r
# s
# i
# n
# (
# 2
# t
# )
#
# y
# =
# 2
# r
# c
# o
# s
# (
# t
# )
# +
# r
# c
# o
# s
# (
# 2
# t
# )
#
# где t – параметр, значения которого меняются от 0 до
# 2
# π
# .
# Напишите функцию cardioid(), принимающую аргументы: параметр r и параметр step – на основе которого определяется шаг изменения параметра t: он равен
# π
# s
# t
# e
# p
# .
# На чисто синем холсте размером 600 на 550 пикселей, сдвинув начало рисования в точку (300, 200) (направления осей остаются прежними – x вправо, y вниз), нужно нарисовать кардиоиду, вычисляя значения последующих координат и соединяя точки ломаной линией. Внутреннюю часть залить чистым красным цветом, результат нужно сохранить в файл cardio.png.
#
# Формат ввода
# Пример вызова функции:
# cardioid(100, 6)

import math

from PIL import Image, ImageDraw


def cardioid(r, step):
    image = Image.new('RGB', (600, 550), 'blue')
    drawer = ImageDraw.Draw(image)
    step_t = math.pi / step
    t = 0
    res = [(300, 200)]
    start_x = 300
    start_y = 200
    while t < 2 * math.pi:
        x = 2 * r * math.sin(t) + r * math.sin(t * 2)
        y = 2 * r * math.cos(t) + r * math.cos(2 * t)
        t += step_t
        res.append((x + start_x, y + start_y))

    res.append(res[1])
    res = tuple(res)
    drawer.polygon(res, 'red')
    image.save('cardio.png')
