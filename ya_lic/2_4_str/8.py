# Браузер понимает, как и что нужно отображать на web-странице, потому что эти страницы написаны специальным языком разметки. Например, абзацы выделяются тегами <p></p>, то есть заключены между открывающим и закрывающим тегами определенного вида.
#
# Не обращая внимания на все остальные теги и строки вообще без тегов, выделите только содержимое абзацев в порядке, обратном расположению на странице.
#
# Формат ввода
# Вводятся строки, пока не будет введен тег, закрывающий страницу: </html>
#
# Формат вывода
# Из строк нужно выделить текст между открывающим абзац тегом <p> и закрывающим </p>, из каждого абзаца собрать одну строку (она может оказаться длинной), и вывести получившиеся строки, начиная с низа страницы, то есть в обратном порядке. На остальные теги внимания не обращать.
#
# Обратите внимание, что при склеивании строк между ними нужно добавить пробел.
#

# import re
#
# s = ''
# let = ''
# while s != '</html>':
#     s = input()
#     let += s
# print(*list(map(lambda x: re.sub(r'\n', ' ', x), re.findall(r'<p>(.*?)</p>', let, flags=re.DOTALL | re.M)))[::-1],
#       sep='\n')

# s = ""
# let = ''
# let2 = []
# while s != '</html>':
#     s = input()
#     if ',' or 's' in s:
#         let = let + s + ' '
#     else:
#         let += s
# for item in let.split('<p>'):
#     for item_2 in item.split('</p>'):
#         if '/' not in item_2:
#             let2.append(item_2)
# for itr in let2[::-1]:
#     if itr != ' ':
#         print(str(itr))


s = ""
let = ''
let2 = []
z = 0
while s != '</html>':
    s = input()
    if '<p>' in s:
        z = 1
    if z == 1 or '</p>' in s:
        if '</p>' in s:
            z = 0
        if 65 <= ord(s[0]) <= 122:
            s = ' ' + s
        let += s
res_str = ''.join([item for item in let.split('<p>')])
for item in res_str.split('</p>'):
    let2.append(item)
let2.pop()
for itr in let2[::-1]:
    print(itr)
