# Слова могут выглядеть очень по-разному. Если рассматривать их как структуру из гласных букв и всех остальных, то можно проверить, насколько они соответствуют требуемому шаблону.
#
# Напишите программу, которая рассортирует слова по убыванию совпадений с шаблоном, а в случае одинакового количества совпадений, по алфавиту, но не самого этого слова, а перевернутого в обратном порядке (в таком случае слово late идёт раньше early).
#
# Формат ввода
# В первой строке вводится шаблон слова: нули соответствуют гласным буквам, звёздочки – всем остальным. Дальше вводятся слова такой же длины, что и шаблон.
#
# Формат вывода
# Все введённые слова нужно вывести по одному в строке в порядке убывания количества совпадений с шаблоном. Если количества одинаковы, то в алфавитном порядке, но не самого слова, а его перевертыша наоборот.
#
# Пример 1
# Ввод	Вывод
# *0**0*
# python
# pascal
# delphi
# matlab
# script
# oberon
# prolog
# matlab
# pascal
# python
# prolog
# delphi
# oberon
# script


def foo(x):
    return lambda s: sum(y in vowel if x == '0' else y not in vowel for x, y in zip(p, s))


p = input()
*a, = iter(input, '')
vowel = 'aeouiy'

print(*sorted(a, key=lambda x: (foo(x), x[::-1])), sep='\n')
